{"ast":null,"code":"import { fetchUtils } from \"react-admin\";\nimport jsonServerProvider from 'ra-data-json-server';\nconst servicesHost = 'http://localhost:8082';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  options.headers.set('Access-Control-Expose-Headers', 'X-Total-Count');\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = jsonServerProvider(servicesHost, httpClient);\nconst dataProv = { ...dataProvider,\n  create: (resource, params) => {\n    if (resource === 'member') {\n      const formData = new FormData();\n      const myFile = new File([params.data.memberFace.memberFace], \"memberFace\");\n      formData.append('memberFace', myFile);\n      formData.append('memberName', params.data.memberName);\n      formData.append('memberCount', params.data.memberCount);\n      return fetch('http://localhost:8082/member', {\n        method: 'post',\n        headers: {\n          \"enctype\": \"multipart/form-data\"\n        },\n        body: formData\n      }).then(response => response.json()).then(picture => dataProvider.create(resource, params.id, { ...params.data,\n        picture\n      }));\n    }\n\n    return dataProvider.create(resource, params.id, { ...params.data\n    });\n  }\n}; // const convertFileToBase64 = file =>\n//     new Promise((resolve, reject) => {\n//         const reader = new FileReader();\n//         reader.onload = () => resolve(reader.result);\n//         reader.onerror = reject;\n//         reader.readAsDataURL(file.rawFile);\n//     });\n\nexport default dataProv;","map":{"version":3,"sources":["C:/Users/이병헌/Desktop/Deep Project/FrontEnd/admin/src/dataProv.js"],"names":["fetchUtils","jsonServerProvider","servicesHost","httpClient","url","options","headers","Headers","Accept","set","fetchJson","dataProvider","dataProv","create","resource","params","formData","FormData","myFile","File","data","memberFace","append","memberName","memberCount","fetch","method","body","then","response","json","picture","id"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AAEA,MAAMC,YAAY,GAAG,uBAArB;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,KAAuB;AACtC,MAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;AAClBD,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAIC,OAAJ,CAAY;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACH;;AACDH,EAAAA,OAAO,CAACC,OAAR,CAAgBG,GAAhB,CAAoB,+BAApB,EAAoD,eAApD;AACA,SAAOT,UAAU,CAACU,SAAX,CAAqBN,GAArB,EAA0BC,OAA1B,CAAP;AACH,CAND;;AAQA,MAAMM,YAAY,GAAGV,kBAAkB,CAACC,YAAD,EAAeC,UAAf,CAAvC;AAEA,MAAMS,QAAQ,GAAG,EACb,GAAGD,YADU;AAEbE,EAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC1B,QAAID,QAAQ,KAAK,QAAjB,EAA2B;AACvB,YAAME,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAMC,MAAM,GAAG,IAAIC,IAAJ,CAAS,CAACJ,MAAM,CAACK,IAAP,CAAYC,UAAZ,CAAuBA,UAAxB,CAAT,EAA6C,YAA7C,CAAf;AACAL,MAAAA,QAAQ,CAACM,MAAT,CAAgB,YAAhB,EAA6BJ,MAA7B;AACAF,MAAAA,QAAQ,CAACM,MAAT,CAAgB,YAAhB,EAA8BP,MAAM,CAACK,IAAP,CAAYG,UAA1C;AACAP,MAAAA,QAAQ,CAACM,MAAT,CAAgB,aAAhB,EAA8BP,MAAM,CAACK,IAAP,CAAYI,WAA1C;AAEA,aAAOC,KAAK,CAAC,8BAAD,EAAiC;AACzCC,QAAAA,MAAM,EAAE,MADiC;AAEzCpB,QAAAA,OAAO,EAAE;AAAC,qBAAY;AAAb,SAFgC;AAGzCqB,QAAAA,IAAI,EAAEX;AAHmC,OAAjC,CAAL,CAKFY,IALE,CAKGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALf,EAMFF,IANE,CAMGG,OAAO,IAAIpB,YAAY,CAACE,MAAb,CAAoBC,QAApB,EAA8BC,MAAM,CAACiB,EAArC,EAAyC,EACtD,GAAGjB,MAAM,CAACK,IAD4C;AAEtDW,QAAAA;AAFsD,OAAzC,CANd,CAAP;AAUH;;AAED,WAAOpB,YAAY,CAACE,MAAb,CAAoBC,QAApB,EAA8BC,MAAM,CAACiB,EAArC,EAAyC,EAAE,GAAGjB,MAAM,CAACK;AAAZ,KAAzC,CAAP;AACH;AAvBY,CAAjB,C,CA0BA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,eAAeR,QAAf","sourcesContent":["import { fetchUtils } from \"react-admin\";\r\nimport jsonServerProvider from 'ra-data-json-server';\r\n\r\nconst servicesHost = 'http://localhost:8082';\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    options.headers.set('Access-Control-Expose-Headers','X-Total-Count');\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst dataProvider = jsonServerProvider(servicesHost, httpClient);\r\n\r\nconst dataProv = {\r\n    ...dataProvider,\r\n    create: (resource, params) => {\r\n        if (resource === 'member') {\r\n            const formData = new FormData();\r\n            const myFile = new File([params.data.memberFace.memberFace],\"memberFace\");\r\n            formData.append('memberFace',myFile);\r\n            formData.append('memberName', params.data.memberName);\r\n            formData.append('memberCount',params.data.memberCount);\r\n\r\n            return fetch('http://localhost:8082/member', {\r\n                method: 'post',\r\n                headers: {\"enctype\" : \"multipart/form-data\"},\r\n                body: formData,\r\n            })\r\n                .then(response => response.json())\r\n                .then(picture => dataProvider.create(resource, params.id, {\r\n                    ...params.data,\r\n                    picture,\r\n                }));\r\n        }\r\n    \r\n        return dataProvider.create(resource, params.id, { ...params.data });\r\n    },\r\n};\r\n\r\n// const convertFileToBase64 = file =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = reject;\r\n\r\n//         reader.readAsDataURL(file.rawFile);\r\n//     });\r\nexport default dataProv;"]},"metadata":{},"sourceType":"module"}