{"ast":null,"code":"import { fetchUtils } from \"react-admin\"; //import jsonServerProvider from 'ra-data-json-server';\n\nimport jsonServerProvider from \"./basicStructureOfProvider\";\nconst servicesHost = 'http://localhost:8082';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  options.headers.set('Access-Control-Expose-Headers', 'X-Total-Count');\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = jsonServerProvider(servicesHost, httpClient);\nconst dataProv = { ...dataProvider,\n  //확산연산자\n  create: (resource, params) => {\n    if (resource === 'member') {\n      const formData = new FormData();\n      const myFile = new File([params.data.memberFace.rawFile], params.data.memberFace.rawFile.name, {\n        type: params.data.memberFace.rawFile.type\n      });\n      formData.append('memberFace', myFile);\n      formData.append('memberName', params.data.memberName);\n      formData.append('memberCount', params.data.memberCount);\n      return fetch(servicesHost + '/' + resource, {\n        method: 'post',\n        body: formData\n      }).then(response => response.json()).then(member => dataProvider.create(resource, member));\n    }\n\n    return dataProvider.create(resource, params);\n  },\n  update: (resource, params) => {\n    if (resource === 'member') {\n      const formData = new FormData();\n\n      if (!params.data.updateMemberFace) {\n        console.log(\"====== Picture Not Found =====\");\n      } else {\n        const myFile = new File([params.data.updateMemberFace.rawFile], params.data.updateMemberFace.rawFile.name, {\n          type: params.data.updateMemberFace.rawFile.type\n        });\n        formData.append('updateMemberFace', myFile);\n      }\n\n      formData.append('memberName', params.data.memberName);\n      formData.append('memberCount', params.data.memberCount);\n      return fetch(servicesHost + '/' + resource + '/' + params.id, {\n        method: 'put',\n        body: formData\n      }).then(response => response.json()).then(member => dataProvider.update(resource, member));\n    }\n\n    return dataProvider.update(resource, params);\n  }\n};\nexport default dataProv;","map":{"version":3,"sources":["C:/Users/이병헌/Desktop/DeepProject/FrontEnd/admin/src/dataProv.js"],"names":["fetchUtils","jsonServerProvider","servicesHost","httpClient","url","options","headers","Headers","Accept","set","fetchJson","dataProvider","dataProv","create","resource","params","formData","FormData","myFile","File","data","memberFace","rawFile","name","type","append","memberName","memberCount","fetch","method","body","then","response","json","member","update","updateMemberFace","console","log","id"],"mappings":"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","sourcesContent":["import { fetchUtils } from \"react-admin\";\r\n//import jsonServerProvider from 'ra-data-json-server';\r\nimport jsonServerProvider from \"./basicStructureOfProvider\";\r\nconst servicesHost = 'http://localhost:8082';\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    options.headers.set('Access-Control-Expose-Headers','X-Total-Count');\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst dataProvider = jsonServerProvider(servicesHost, httpClient);\r\n\r\nconst dataProv = {\r\n    ...dataProvider, //확산연산자\r\n    create: (resource, params) => {\r\n        if (resource === 'member') {\r\n            const formData = new FormData();\r\n            const myFile = new File([params.data.memberFace.rawFile],params.data.memberFace.rawFile.name,{ type: params.data.memberFace.rawFile.type});\r\n            formData.append('memberFace',myFile);\r\n            formData.append('memberName', params.data.memberName);\r\n            formData.append('memberCount',params.data.memberCount);\r\n            \r\n            return fetch(servicesHost+'/'+resource, {\r\n                method: 'post',\r\n                body: formData,\r\n            })\r\n                .then(response => response.json())\r\n                .then(member => dataProvider.create(resource, member));\r\n        }\r\n        return dataProvider.create(resource, params);\r\n    },\r\n    update: (resource, params) => {\r\n        if (resource === 'member') {\r\n            const formData = new FormData();\r\n            if(!params.data.updateMemberFace){\r\n                console.log(\"====== Picture Not Found =====\");\r\n            }else{\r\n                const myFile = new File([params.data.updateMemberFace.rawFile],params.data.updateMemberFace.rawFile.name,{ type: params.data.updateMemberFace.rawFile.type});\r\n                formData.append('updateMemberFace',myFile);\r\n            }\r\n            formData.append('memberName', params.data.memberName);\r\n            formData.append('memberCount',params.data.memberCount);\r\n            return fetch(servicesHost+'/'+resource +'/' + params.id, {\r\n                method: 'put',\r\n                body: formData,\r\n            })\r\n            .then(response => response.json())\r\n            .then(member => dataProvider.update(resource, member));\r\n        }\r\n        return dataProvider.update(resource, params);\r\n    },\r\n\r\n};\r\n\r\nexport default dataProv;"]},"metadata":{},"sourceType":"module"}