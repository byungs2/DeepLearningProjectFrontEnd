{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBCD1\\uD5CC\\\\Desktop\\\\Deep Project\\\\FrontEnd\\\\admin\\\\src\\\\userPage.js\";\nimport * as React from \"react\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => props.onClick(),\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const rowPower = this.props.rowVal;\n    const colPower = this.props.colVal;\n    const squareNum = [];\n\n    for (let i = 0; i < rowPower * colPower; i++) {\n      if (i % colPower === 0) {\n        squareNum.push(i);\n      }\n    }\n\n    const squares = squareNum.map((unitEl, idx) => {\n      const rendedSq = [];\n\n      for (let i = 0; i < colPower; i++) {\n        rendedSq.push(this.renderSquare(unitEl + i));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: rendedSq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(this.props.rowValue * this.props.colValue).fill(\"ㅁ\")\n      }],\n      sortorBoolean: false,\n      colPower: this.props.colValue,\n      rowPower: this.props.rowValue,\n      rowNumber: [],\n      colNumber: [],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const rowNumber = this.state.rowNumber.slice(0, this.state.stepNumber);\n    const colNumber = this.state.colNumber.slice(0, this.state.stepNumber);\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[this.state.stepNumber];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares)[0] || squares[i] === 'X' || squares[i] === 'O') {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      rowNumber: rowNumber.concat([parseInt(i / this.state.colPower)]),\n      colNumber: colNumber.concat([i % this.state.colPower]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    }); // if (calculateWinner(squares)[1]){\n    //   for(let i = 0; i < 3; i++){\n    //     squares[calculateWinner[1][i]] = squares[calculateWinner[1][i]]\n    //   }\n    // }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  toggler() {\n    this.setState({\n      sortorBoolean: !this.state.sortorBoolean\n    });\n  }\n\n  render() {\n    const rowPower = this.state.rowPower;\n    const colPower = this.state.colPower;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares)[0];\n    let moves = history.map((step, move) => {\n      const firstStr = 'Go to move #' + move + '(' + this.state.colNumber[move - 1] + ',' + this.state.rowNumber[move - 1] + ')';\n      const startingStr = 'Go to game start';\n      const desc = move ? firstStr : startingStr;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    });\n    sortor(moves, this.state.sortorBoolean);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.toggler(),\n            children: \"Sort History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          rowVal: rowPower,\n          colVal: colPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction sortor(moves, sortorBoolean) {\n  moves.sort(function (a, b) {\n    return sortorBoolean ? b.key - a.key : a.key - b.key;\n  });\n  return moves;\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] !== \"ㅁ\") {\n      return [squares[a], [a, b, c]];\n    }\n  }\n\n  return [null, null];\n} // class userPage extends React.Component {\n//   render(){\n//     return (\n//       <Game rowValue = {3} colValue = {3}/>\n//     )\n//   }\n// }\n\n\nexport const userPage = () => /*#__PURE__*/_jsxDEV(Game, {\n  rowValue: 3,\n  colValue: 3\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 3\n}, this);\nexport default userPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/이병헌/Desktop/Deep Project/FrontEnd/admin/src/userPage.js"],"names":["React","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","rowPower","rowVal","colPower","colVal","squareNum","push","map","unitEl","idx","rendedSq","Game","constructor","state","history","Array","rowValue","colValue","fill","sortorBoolean","rowNumber","colNumber","stepNumber","xIsNext","handleClick","slice","current","calculateWinner","setState","concat","parseInt","length","jumpTo","step","toggler","winner","moves","move","firstStr","startingStr","desc","sortor","status","sort","a","b","key","lines","c","userPage"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick = {() => props.onClick()}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square value = {this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\r\n  }\r\n\r\n  render() {\r\n    const rowPower = this.props.rowVal;\r\n    const colPower = this.props.colVal;\r\n    const squareNum = [];\r\n    for(let i = 0; i < rowPower*colPower; i ++){\r\n      if (i%colPower === 0){\r\n        squareNum.push(i)\r\n      }\r\n    }\r\n    const squares = squareNum.map((unitEl, idx) => {\r\n      const rendedSq = []\r\n      for(let i = 0 ; i < colPower; i++){\r\n        rendedSq.push(this.renderSquare(unitEl+i))\r\n      }\r\n      return (\r\n        <div className = \"board-row\">\r\n          {rendedSq}\r\n        </div>\r\n      );\r\n    })\r\n    return (\r\n      <div>\r\n        {squares}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history : [{\r\n        squares : Array(this.props.rowValue * this.props.colValue).fill(\"ㅁ\")\r\n      }],\r\n      sortorBoolean : false,\r\n      colPower : this.props.colValue,\r\n      rowPower : this.props.rowValue,\r\n      rowNumber : [],\r\n      colNumber : [],\r\n      stepNumber : 0,\r\n      xIsNext : true,\r\n    };\r\n  }\r\n  handleClick(i) {\r\n    const rowNumber = this.state.rowNumber.slice(0,this.state.stepNumber);\r\n    const colNumber = this.state.colNumber.slice(0,this.state.stepNumber);\r\n    const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n    const current = history[this.state.stepNumber];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares)[0] || squares[i] === 'X' || squares[i] === 'O') {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      rowNumber : rowNumber.concat([parseInt(i/this.state.colPower)]),\r\n      colNumber : colNumber.concat([i%this.state.colPower]),\r\n      stepNumber : history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n    // if (calculateWinner(squares)[1]){\r\n    //   for(let i = 0; i < 3; i++){\r\n    //     squares[calculateWinner[1][i]] = squares[calculateWinner[1][i]]\r\n    //   }\r\n    // }\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber : step,\r\n      xIsNext: (step %2) === 0\r\n    });\r\n  };\r\n  toggler(){\r\n    this.setState({\r\n      sortorBoolean : !this.state.sortorBoolean\r\n    })\r\n  };\r\n  render() {\r\n    const rowPower = this.state.rowPower;\r\n    const colPower = this.state.colPower;\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares)[0];\r\n    let moves = history.map((step, move) => {\r\n      const firstStr = 'Go to move #' + move + '('+this.state.colNumber[move-1]+','+this.state.rowNumber[move-1]+')';\r\n      const startingStr = 'Go to game start';\r\n      const desc = move ? firstStr : startingStr;\r\n      return (\r\n        <li key = {move}>\r\n          <button onClick = {() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    sortor(moves,this.state.sortorBoolean);\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-info\">\r\n          <div>\r\n            <button onClick ={()=>this.toggler()}>{\"Sort History\"}</button>\r\n          </div>\r\n          <div>\r\n            {status}\r\n          </div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)} rowVal = {rowPower} colVal = {colPower}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction sortor(moves,sortorBoolean){\r\n  moves.sort(function(a,b){\r\n    return sortorBoolean ? b.key - a.key : a.key - b.key;\r\n  })\r\n  return moves\r\n}\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if ((squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) && (squares[a] !== \"ㅁ\")) {\r\n      return [squares[a],[a, b, c]];\r\n    }\r\n  }\r\n  return [null,null];\r\n}\r\n// class userPage extends React.Component {\r\n//   render(){\r\n//     return (\r\n//       <Game rowValue = {3} colValue = {3}/>\r\n//     )\r\n//   }\r\n// }\r\nexport const userPage = () => (\r\n  <Game rowValue = {3} colValue = {3}/>\r\n)\r\n\r\nexport default userPage;"]},"metadata":{},"sourceType":"module"}